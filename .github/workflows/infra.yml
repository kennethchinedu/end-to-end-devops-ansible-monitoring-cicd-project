name: Infra Pipeline

on:
   push:
     branches:
       - main
     paths:
       - 'ansible/**'
       - 'terraform/**'
       - '.github/workflows/**'
 
        
env:
   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   AWS_DEFAULT_REGION: 'us-east-1'

   
jobs:
  terraform:
#    if: ${{ github.event_name == 'push' && (github.event.commits.*.message | join(' ') =~ 'terraform' || github.event.head_commit.message =~ 'terraform') }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          
      - name: Terraform Init
        run:  terraform init

      - name: Terraform Apply
        run: terraform apply --auto-approve 
        
        
  ansible:
    runs-on: self-hosted
    steps:

      - name: Checkout only the Ansible folder into a custom directory
        uses: actions/checkout@v4
        with:
          path: ansible
          # sparse-checkout: "ansible"
          # sparse-checkout-cone-mode: false
    

      # - name: set up python
      #   run: sudo apt-get update && sudo apt-get install -y python3-pip python3-venv

     
      # - name: Set up Ansible
      #   run: | 
      #     pip3 install ansible
      #     ansible --version | grep "python version"


      - name: install boto & aws collection
        run: |
       
          python3 -m venv myenv
          source myenv/bin/activate
          pip install  boto3 botocore
          ansible-galaxy collection install cloud.terraform
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection install community.aws
        
      # - name: List files in ansible/templates
      #   run: ls -la
      #   working-directory: ansible/templates/

      - name: Check ansible config file
        run: |
              # sudo cp $GITHUB_WORKSPACE/ansible/ansible/templates/ansible.cfg / 
              ansible --version
        # working-directory: ansible/templates/  

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa


      - name: Set Ansible Python Interpreter
        run: |
            echo "ANSIBLE_PYTHON_INTERPRETER=$(which python)" >> $GITHUB_ENV
            pwd 
        
      - name: Run server playbook
        run: | 
          ansible-playbook -i servers.aws_ec2.yml  server_playbook.yml  --private-key  ~/.ssh/id_rsa -vvvvv
        working-directory: ansible/ansible
        
      - name: Run Monitoring Playbook
        run: ansible-playbook -i hosts monitoring_playbook.yml -vvv
        working-directory: ansible/ansible






